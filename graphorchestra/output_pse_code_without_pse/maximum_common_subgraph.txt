import networkx as nx
import itertools

def maximum_common_subgraph(G1, G2):
    def is_subgraph(G1_sub, G2):
        for u, v in G1_sub.edges():
            if u not in G2 or v not in G2 or not G2.has_edge(u, v):
                return False
        return True

    max_size = 0
    for r in range(1, min(len(G1.nodes()), len(G2.nodes())) + 1):
        for subset in itertools.combinations(G1.nodes(), r):
            G1_sub = G1.subgraph(subset)
            if is_subgraph(G1_sub, G2):
                max_size = max(max_size, len(G1_sub.nodes()))
    return max_size
