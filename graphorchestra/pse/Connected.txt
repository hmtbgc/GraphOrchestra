You are required to create a Python function that identifies all connected components in a given social network represented by an adjacency list. The function should output all components.

Within a connected component, any node can be reached from any other node through the edges in the graph. Different connected components are isolated from each other.

The input to your function will be a dictionary where keys are the names of individuals and values are lists of friends.

Your function should return a list of components, each representing one connected component in the network.

Please implement the function according to the following pseudocode:

```pseudocode
Finding all connected components (G) : [C_1,...,C_K] ;
1. V ← G.nodes, V' ← ∅, K ← 1;
2. result ← List();
2. while V' ≠ V:
3.     select s ∈ {x ∈ V | x ∉ V'};
4.     V' ← V' ∪ {s};
5.     Q ← { s }, C_K ← { s };
6.     while Q ≠ ∅:
7.         u ← Q.dequeue()
8.         for each v ∈ G.adjacent(u):
9.             if v ∉ V':
10.                V' ← V' ∪ {v}, Q.enqueue(v), C_K ← C_K ∪ {v};
11.    result ← result.append(C_K);
12.    K ← K + 1;
13.result ← result(List(C)).
```
Present your solution in the following format, do not write example usage of the function:

```python
def find_connected_components(adjacency_list):
    # Your code here
    pass
```
