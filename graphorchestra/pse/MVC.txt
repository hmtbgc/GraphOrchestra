Your task is to solve the Minimum Vertex Cover problem in the given social network. In this network, each node represents a user, and each edge represents a friendship connection. 

You need to identify the smallest subset of users such that every friendship connection has at least one user from this subset.

The input to your function will be a dictionary where keys are the names of users and values are lists of the user's friends.

Your function should return Minimum Vertex Cover of the network in format:[UserA,UserB,UserC,UserD...].

Please implement the function completely according to the following pseudocode:

```pseudocode
Function find Minimum Vertex Cover of graph G : a Minimum Vertex Cover S
    vertex_cover ← empty set
    edges ← empty set

    for each vertex and its neighbors in G:
        for each neighbor:
            if (vertex, neighbor) is not in edges and (neighbor, vertex) is not in edges:
                add (vertex, neighbor) to edges

    while edges is not empty:
        max_coverage = -1
        best_vertex = None
        for each vertex and its neighbors in G:
            covered_edges = {edge | edge in edges and vertex in edge}
            coverage = size of covered_edges
            if coverage > max_coverage:
                max_coverage = coverage
                best_vertex = vertex

        add best_vertex to vertex_cover
        edges = edges - {edge | edge in edges and best_vertex in edge}

    return vertex_cover converted to a list
```

Present your solution in the following format, do not write any example usage of the function:

```python
def MVC(adjacency_list):
    # Your code here
    pass
``` 
