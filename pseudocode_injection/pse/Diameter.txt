Function Compute diameter of graph G(V,E):
  diameter ← 0
  Iterate over all nodes in graph
    visited ← set(), distance ← {node: float('inf') for node in graph}
    Initialize queue Q with start node: Q ← [start]
    distance[start] = 0
    while Q is not empty do
      current_node ← Q.dequeue()
      visited ← visited ∪ { current_node}
      Iterate over all neighbors of current_node
        If neighbor ∉ V'
          visited ← visited ∪ { neighbor}
          distance[neighbor] ← distance[current_node] + 1
          Enqueue neighbor to Q 

    longest_path ← max(distance.values())
    diameter ← max{diameter, longest_path}
  return diameter